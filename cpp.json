{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"cps": 
	{
		"prefix": "cps",
		"body": [
			"#include <bits/stdc++.h>",
			" ",
			
			"using namespace std;",
			"typedef long long int lli;",
			" ",
			"//start_of_debug",
			"template <class T>",
			"void _vals(T a){cerr << a << \" \";}",
			"template <class T>",
			"void _vals(vector <T> a){",
    		" cerr << \" [ \";",
    		" for(auto i : a)",
       		"  _vals(i);",
    		" cerr << \"] \";",
			"}",
			"template <class T, class V>",
			"void _vals(map <T, V> a){",
			" cerr << \" [\";",
			" for(auto i : a)",
			"{",
			"  cerr << \" [ \";  _vals(i.first); cerr << \", \"; _vals(i.second); cerr << \"] \";",
			"}",
			" cerr << \"] \";",
			"  ",
			"}",
			"#ifndef ONLINE_JUDGE",
			"  #define debug(x) cerr << #x << \" \"; _vals(x); cerr << \"\\n\"", 
			"#else",
			"  #define debug(x)",
			"#endif",
			"#define test cout << \"Working\\n\"",
			"//end_of_debug",
			" ",
			"#define start() lli x; cin >> x; while(x--)",
			"#define IO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)",
			"#define MOD 1000000007",
			"#define lb \"\\n\" ",
			"#define pb push_back",
			"",
			"void solution()",
			"{",
			" #ifndef ONLINE_JUDGE",
			"   freopen(\"error.txt\", \"w\", stderr);", 
			" #endif",
			" ",
			"    $0",
			"}",

			"int main()",
			"{",
			"",
			"IO;",
			"start()",
			" solution();",
			"return 0;",
			"}"
		],
		"description": "Log output to console"
	},

}